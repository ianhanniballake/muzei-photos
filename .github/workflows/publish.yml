name: Publish

on:
  push:
    branches: 'deploy'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1
    - name: setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x
    - name: setup Fastlane
      run: gem install bundler && bundle install
    - name: setup properties & keys
      run: |
        echo "${{ secrets.GoogleApiKeys }}" > muzeiPhotos/googleapi.properties
        echo -e "store=upload_key.jks\nalias=upload\npass=${{ secrets.JKS_PASS }}\nstorePass=${{ secrets.JKS_PASS }}" > app/keystore.properties
        echo -e "sdk.dir=$ANDROID_HOME\nkeystore.props.file=keystore.properties" > local.properties
        echo "${{ secrets.jsonKeyBase64 }}" | base64 --decode > play-dev-xinthink-3e418a168938.json
        echo "${{ secrets.JKS_BASE64 }}" | base64 --decode > app/upload_key.jks

    # publish a new release to internal track
    - name: publish to Google Play
      run: bundle exec fastlane deploy offline:false --verbose

    # notifications
    - name: notify success to Telegram
      if:  success()
      uses: appleboy/telegram-action@master
      env:
        TELEGRAM_TOKEN: ${{ secrets.TelegramBotToken }}
        TELEGRAM_TO: ${{ secrets.TelegramTarget }}
        DEBUG: true
        FORMAT: markdown
      with:
        args: |
          "âœ… [${{ github.repository }} publication](${{ github.event.repository.html_url }}/actions) *succeed*.

          `${{ github.ref }}` `${{ github.sha }}` by *${{ github.actor }}*"
    - name: notify failure to Telegram
      if: failure()
      uses: appleboy/telegram-action@master
      env:
        TELEGRAM_TOKEN: ${{ secrets.TelegramBotToken }}
        TELEGRAM_TO: ${{ secrets.TelegramTarget }}
        DEBUG: true
        FORMAT: markdown
      with:
        args: |
          "ðŸ”´ [${{ github.repository }} publication](${{ github.event.repository.html_url }}/actions) *failed*.

          `${{ github.ref }}` `${{ github.sha }}` by *${{ github.actor }}*"
